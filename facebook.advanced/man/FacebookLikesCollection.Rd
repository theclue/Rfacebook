% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/FacebookLikesCollection.R
\name{FacebookLikesCollection}
\alias{FacebookLikesCollection}
\title{Build a Collection of Facebook Post Comments}
\usage{
FacebookLikesCollection(id, token = NULL, parameters = list(),
  fields = c("id", "name", "profile_type"),
  n = getOption("facebook.maxitems"), metadata = FALSE,
  .progress = create_progress_bar())
}
\arguments{
\item{id}{A character vector or a comma-delimited string of IDs or an existing Facebook Collection of any of the supported types}

\item{token}{Either a temporary access token created at
\url{https://developers.facebook.com/tools/explorer} or the OAuth token
created with \code{\link{fbOAuth}}. If \code{NULL} and \code{id} is a Collection, get that one instead. Otherwise, no query is performed
to the Facebook Graph API and an empty Collection is returned}

\item{parameters}{A list of parameters to be added to the Facebook Graph API query. For more information on the
accepted parameters, see: \url{https://developers.facebook.com/docs/graph-api/using-graph-api}}

\item{fields}{A character vector or a comma-delimited string with the list of fields to get for each ID. If no value for a given fields is found, it will
be set to \code{NULL}}

\item{n}{If \code{id} is a Collection, then \code{n} is the maximum number of posts to be pulled for any element of the Collection in \code{id}.
Otherwise, the parameter is ignored. It can be set to \code{Inf} to pull out any available public post and assume the default value from the value
of \code{facebook.maxitems} global option if missing.}

\item{metadata}{If set to \code{TRUE}, the medatata from each ID is pulled with the data and the \code{type} slot is fed. Please note
that setting this to \code{TRUE} will considerably slow down the query.}

\item{.progress}{progress_bar object as defined in the plyr package.
By default the \code{none} progress bar is used, which prints nothing to the console.}
}
\value{
A collection of comments in a \code{\link{FacebookCommentsCollection-class}} object.
}
\description{
Connect to Facebook Graph API, get information from a list of public Facebook likes to posts or comments and build a \code{FacebookLikesCollection-class}
instance.
}
\details{
\code{FacebookLikesCollection} is the constructor for the \code{\link{FacebookLikesCollection-class}}.
It returns data about likes to posts or comments but doesn't return the comments or posts themselves.

Since Facebook doesn't provide a key for a single like, the ID slot for this kind of collection is a matrix of two columns:
the user ID of who put the like and the post/comment ID of where the like was put on. This identifies a unique key for the like.

Consider pass an instance of a Facecook Posts Collection or a Facebook Comments Collection built using the construction \code{\link{FacebookPostsCollection}}
or \code{\link{FacebookCommentsCollection}}, if you need to bind each like to the belonging post/comment.

Also, please note that this kind of collection cannot have mixed parents. You can eventually feed it with a FacebookPostsCollection
or a FacebookCommentsCollection, but no both at the same time: likes to comments and likes to posts are distinct items, on Facebook Graph API.

Due to the network-graph nature of Facebook data model,
you can always specify field details nesting \code{.fields()} clauses.

For example, if you need only \code{id} and \code{name} for the \code{from} node, this clause is valid among others:
\code{from.fields(id,name)}.
}
\examples{
\dontrun{
## See examples for fbOAuth to know how token was created.
 load("fb_oauth")

## Getting information about two example Facebook Pages
 fb.pages <- FacebookPagesCollection(id = c("9thcirclegames", "NathanNeverSergioBonelliEditore"), token = fb_oauth)

## Pull the latest 10 posts from each page in a pages collection
 fb.posts <- FacebookPostscollection(id = fb.pages, token = fb_oauth, n = 10)

## Pull all the likes from each element of the posts collection
fb.posts.likes <- FacebookLikesCollection(fb.posts, fb_token, n = Inf)

## Pull all the available comments from each post of the post collection
 fb.comments <- FacebookPostscollection(id = fb.posts, token = fb_oauth, n = Inf)

## Pull all the likes from each element of the comments collections
 fb.comments.likes <- FacebookLikesCollection(id = fb.comments, token = fb_oauth, n = Inf)

## Convert the collection to a data frame
fb.posts.likes.df <- as.data.frame(fb.posts.likes)

# The same as before in a more compact fashion using the pipe operator
# chaining from a Pages then to a Posts Collection and finally building a Likes Collection
fb.posts.likes.pipe <-
 FacebookPagesCollection(id = c("9thcirclegames", "NathanNeverSergioBonelliEditore"), token = fb_oauth) \%>\%
   FacebookPostscollection(n = 10) \%>\% FacebookLikesCollection(n = Inf)
}
}
\author{
Gabriele Baldassarre \email{gabriele@gabrielebaldassarre.com}
}
\seealso{
\code{\link{FacebookCommentssCollection}}, \code{\link{FacebookPostssCollection}}, \code{\link{FacebookUsersLikesCollection}}, \code{\link{fbOAuth}}

Other Facebook Collection Costructors: \code{\link{FacebookCommentsCollection}};
  \code{\link{FacebookPostsCollection}}
}

