% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/FacebookPostsCollection.R
\name{FacebookPostsCollection}
\alias{FacebookPostsCollection}
\title{Build a Collection of Facebook Posts}
\usage{
FacebookPostsCollection(id, token = NULL, parameters = list(),
  fields = "id,from.fields(id,name),message,created_time,type,link,name",
  feed = TRUE, n = getOption("facebook.maxitems"))
}
\arguments{
\item{id}{A character vector or a comma-delimited string of IDs or an existing Facebook Collection of any of the supported types}

\item{token}{Either a temporary access token created at
\url{https://developers.facebook.com/tools/explorer} or the OAuth token
created with \code{\link{fbOAuth}}. If \code{NULL} and \code{id} is a Collection, get that one instead. Otherwise, no query is performed
to the Facebook Graph API and an empty Collection is returned}

\item{parameters}{A list of parameters to be added to the Facebook Graph API query. For more information on the
accepted parameters, see: \url{https://developers.facebook.com/docs/graph-api/using-graph-api}}

\item{fields}{A character vector or a comma-delimited string with the list of fields to get for each ID. If no value for a given fields is found, it will
be set to \code{NULL}}

\item{feed}{If \code{id} is a Collection and \code{feed} is set to If \code{TRUE}, the Collection will also include posts
eritten by others (not only by the owner of the Collection items). If \code{id} is not a collection, the parameter is ignored.}

\item{n}{If \code{id} is a Collection, then \code{n} is the maximum number of posts to be pulled for any element of the Collection in \code{id}.
Otherwise, the parameter is ignored. It can be set to \code{Inf} to pull out any available public post.}
}
\value{
A collection of pages in a \code{\link{FacebookPagesCollection-class}} object.
}
\description{
Connect to Facebook Graph API, get information from a list of public Facebook posts and build a \code{\link{FacebookPostsCollection-class}}
instance.
}
\details{
\code{FacebookPostsCollection} is the constructor for the \code{\link{FacebookPostsCollection-class}}.
It returns data about posts but doesn't return lists of comments or likes (altough it will return a summary view of both).

You can actually get some informations about comments and likes using fields nesting (see below), but this is not actually
recommended.

Consider using the twin functions \code{\link{FacebookCommentsCollection}}, \code{\link{FacebookLikesCollection}} to focuse on these nodes
of data.

Due to the network-graph nature of Facebook data model,
you can always specify fields details for each field eventually nesting \code{.fields()} clauses.

For example, if you need only \code{id} and \code{name} for the \code{from} node, this clause is valid among others:
\code{from.fields(id,name)}.
}
\examples{
\dontrun{
## See examples for fbOAuth to know how token was created.
 load("fb_oauth")

## Getting information about two example Facebook Pages
 fb.pages <- FacebookPagesCollection(id = c("9thcirclegames", "NathanNeverSergioBonelliEditore"), token = fb_oauth)

## Pull the latest 10 posts from each page
 fb.posts <- FacebookPostscollection(id = fb.pages, token = fb_oauth, n = 10)

## Convert the collection to a data frame
fb.posts.df <- as.data.frame(fb.posts)

# The same as before in a more compact fashion using the pipe operator
fb.posts.df <- as.data.frame(
 FacebookPagesCollection(id = c("9thcirclegames", "NathanNeverSergioBonelliEditore"), token = fb_oauth) \%>\%
   FacebookPostscollection(n = 10)
 )
}
}
\author{
Gabriele Baldassarre \email{gabriele@gabrielebaldassarre.com}
}
\seealso{
\code{\link{FacebookPagesCollection}}, \code{\link{FacebooCommentsCollection}}, \code{\link{fbOAuth}}
}

